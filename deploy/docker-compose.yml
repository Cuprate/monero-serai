version: "3.9"
name: serai-dev
  # ------------------------------------------------------------
  # Services
  # ------------------------------------------------------------
  # Profiles:
  # base - single node, unidentified
  # coins - node clients for coins only (BTC, ETH, XMR)
  # cluster-sm - Alice, Bob, Charlie
  # cluster-coins-sm - cluster-sm with coins
  # cluster-lg - Alice, Bob, Charlie, Dave, Eve, Ferdie
  # cluster-coins-lg - cluster-lg with coins
  # monero - full node monero only
  # bitcoin - full node bitcoin only
  # ethereum - full node ethereum only
  # Example: docker compose --profile bitcoin up
volumes:
  node-base:
  node-alice:
  node-bob:
  node-charlie:
  node-dave:
  node-eve:
  node-ferdie:
  genesis-volume:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    profiles:
      - kafka
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.2
    profiles:
      - kafka
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    profiles:
      - kafka
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181

  genesis:
    profiles:
      - _
    image: genesis:dev
    build:
      context: ./genesis/
      dockerfile: Dockerfile
    entrypoint: /entry-dev.sh
    volumes:
      - genesis-volume:/temp

  _node:
    &node_defaults
    restart: unless-stopped
    image: serai-node:dev
    profiles:
      - _
    build:
      context: ../
      dockerfile: ./deploy/serai/Dockerfile
      args:
        TAG: serai-node
    entrypoint: /scripts/entry-dev.sh
    volumes:
      - "./serai/scripts:/scripts"
      - genesis-volume:/temp
    depends_on:
      - genesis

  node-base:
    <<: *node_defaults
    hostname: node-base
    profiles:
      - node
      - base
    environment:
      CHAIN: local
      NAME: base

  node-alice:
    <<: *node_defaults
    hostname: node-alice
    profiles:
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: alice
      VALIDATOR: true

  node-bob:
    <<: *node_defaults
    hostname: node-bob
    profiles:
      - bob
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: bob
      VALIDATOR: true

  node-charlie:
    <<: *node_defaults
    hostname: node-charlie
    profiles:
      - charlie
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: charlie
      VALIDATOR: true

  node-dave:
    <<: *node_defaults
    hostname: node-dave
    profiles:
      - dave
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: dave

  node-eve:
    <<: *node_defaults
    hostname: node-eve
    profiles:
      - eve
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: eve

  node-ferdie:
    <<: *node_defaults
    hostname: node-ferdie
    profiles:
      - ferdie
      - cluster-lg
      - cluster-coins-lg
    environment:
      CHAIN: local
      NAME: ferdie
      
  # Coordinator Services
  _coordinator:
    &coordinator_defaults
    restart: unless-stopped
    image: serai-coordinator:dev
    tty: true
    profiles:
      - _
    build:
      context: ../
      dockerfile: ./deploy/coordinator/Dockerfile
      args:
        TAG: serai-coordinator
    entrypoint: /home/coordinator/scripts/entry-dev.sh
    volumes:
      - "./coordinator/scripts:/home/coordinator/scripts"
      - "./coordinator/config:/home/coordinator/config"

  # base
  coordinator-base:
    <<: *coordinator_defaults
    hostname: coordinator-base
    profiles:
      - base
      - coordinator
    environment:
      NAME: base

  # alice
  coordinator-alice:
    <<: *coordinator_defaults
    hostname: coordinator-alice
    profiles:
      - alice
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: alice

  # bob
  coordinator-bob:
    <<: *coordinator_defaults
    hostname: coordinator-bob
    profiles:
      - bob
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: bob

  # charlie
  coordinator-charlie:
    <<: *coordinator_defaults
    hostname: coordinator-charlie
    profiles:
      - charlie
      - cluster-sm
      - cluster-coins-sm
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: charlie

  # dave
  coordinator-dave:
    <<: *coordinator_defaults
    hostname: coordinator-dave
    profiles:
      - dave
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: dave

  # eve
  coordinator-eve:
    <<: *coordinator_defaults
    hostname: coordinator-eve
    profiles:
      - eve
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: eve

  # ferdie
  coordinator-ferdie:
    <<: *coordinator_defaults
    hostname: coordinator-ferdie
    profiles:
      - ferdie
      - cluster-lg
      - cluster-coins-lg
    environment:
      NAME: ferdie

  # Processor Services

  # Coin Services
  bitcoin:
    profiles:
      - single-coins
      - cluster-coins-sm
      - cluster-coins-lg
      - coins
      - bitcoin
    build:
      context: ./coins/bitcoin/
    restart: unless-stopped
    volumes:
      - "./coins/bitcoin/scripts:/scripts"
    entrypoint: /scripts/entry-dev.sh

  ethereum:
    profiles:
      - single-coins
      - cluster-coins-sm
      - cluster-coins-lg
      - coins
      - ethereum
    build:
      context: ./coins/ethereum/
    restart: unless-stopped
    volumes:
      - "./coins/ethereum/scripts:/scripts"
    entrypoint: /scripts/entry-dev.sh

  monero:
    profiles:
      - single-coins
      - cluster-coins-sm
      - cluster-coins-lg
      - coins
      - monero
    build:
      context: ./coins/monero/
    restart: unless-stopped
    volumes:
      - "./coins/monero/scripts:/scripts"
    entrypoint: /scripts/entry-dev.sh
    ports:
      - "18081:18081"
